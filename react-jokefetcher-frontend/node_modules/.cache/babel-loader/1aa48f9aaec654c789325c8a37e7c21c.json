{"ast":null,"code":"function scrapeFacade() {\n  function handleHttpErrors(res) {\n    if (!res.ok) {\n      return Promise.reject({\n        status: res.status,\n        fullError: res.json()\n      });\n    }\n\n    return res.json();\n  }\n\n  const getScrape = () => {\n    return fetch(\"http://localhost:8080/securitystarter/api/scrape\").then(handleHttpErrors);\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  return {\n    getScrape\n  };\n}\n\nexport default scrapeFacade;","map":{"version":3,"sources":["C:/Users/frede/Desktop/3.Semester/Flow3-Week2/Torsdag/react-jokefetcher-frontend/src/scrapeFacade.js"],"names":["scrapeFacade","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","getScrape","fetch","then","makeOptions","method","addToken","body","opts","headers","Accept","loggedIn","getToken","JSON","stringify"],"mappings":"AAAA,SAASA,YAAT,GAAwB;AACtB,WAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,aAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAd;AAAsBC,QAAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ;AAAjC,OAAf,CAAP;AACD;;AACD,WAAON,GAAG,CAACM,IAAJ,EAAP;AACD;;AAED,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOC,KAAK,CAAC,kDAAD,CAAL,CAA0DC,IAA1D,CACLV,gBADK,CAAP;AAGD,GAJD;;AAMA,QAAMW,WAAW,GAAG,CAACC,MAAD,EAASC,QAAT,EAAmBC,IAAnB,KAA4B;AAC9C,QAAIC,IAAI,GAAG;AACTH,MAAAA,MAAM,EAAEA,MADC;AAETI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFA,KAAX;;AAOA,QAAIJ,QAAQ,IAAIK,QAAQ,EAAxB,EAA4B;AAC1BH,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiCG,QAAQ,EAAzC;AACD;;AACD,QAAIL,IAAJ,EAAU;AACRC,MAAAA,IAAI,CAACD,IAAL,GAAYM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAZ;AACD;;AACD,WAAOC,IAAP;AACD,GAfD;;AAiBA,SAAO;AACLP,IAAAA;AADK,GAAP;AAGD;;AAED,eAAeT,YAAf","sourcesContent":["function scrapeFacade() {\r\n  function handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject({ status: res.status, fullError: res.json() });\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  const getScrape = () => {\r\n    return fetch(\"http://localhost:8080/securitystarter/api/scrape\").then(\r\n      handleHttpErrors\r\n    );\r\n  };\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  };\r\n\r\n  return {\r\n    getScrape\r\n  };\r\n}\r\n\r\nexport default scrapeFacade;\r\n"]},"metadata":{},"sourceType":"module"}